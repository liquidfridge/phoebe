{"version":3,"sources":["../../libraries/compass-mixins/lib/compass/functions/_lists.scss","../../libraries/compass-mixins/lib/compass/functions/_constants.scss","../../libraries/compass-mixins/lib/compass/functions/_display.scss","phoebe.print.scss","variables/_colors.scss","variables/_grid.scss"],"names":[],"mappings":"AAAA;;;GAGG;ACHH;;;GAGG;ACHH;;;GAGG;ACEH;EACE,UAAU;EACV,WAAW;EACX,uBCPmB,EDIf;;AAMN;EACE,iBAAiB;EAAE,SAAS;EAC5B,YCbmB;EDcnB,iCCNkB,EDGhB;;AAOD;EACC,0BCVgB,EDSX;;AAIN;EACC,uBCtBiB,EDqBX;;AAKV;EACE,qBAAuD,EADrD;;AAIJ;EACE,mBAAmB,EADd;;AAIP;EACE,gBE/BqB,EF8BhB;;AAIP;EACE,iBEnCqB,EFkCZ;;AAIX;EACE,iBEvCqB,EFsCd;;AAIT;EACE,8BCxCkB;EDyClB,iBE5CqB,EF0CZ","file":"phoebe.print.css","sourcesContent":["/*\n * A partial implementation of the Ruby list functions from Compass:\n * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/lists.rb\n */\n\n\n// compact is part of libsass\n\n@function -compass-nth($list, $place) {\n  // Yep, Sass-lists are 1-indexed.\n  @if $place == \"first\" {\n    $place: 1;\n  }\n  @if $place == \"last\" {\n    $place: length($list);\n  }\n  @return nth($list, $place);\n}\n\n// compass_list and compass_space_list can't be implemented in sass script\n\n@function -compass-list-size($list) {\n  @return length($list);\n}\n\n@function -compass-slice($list, $start, $end: false) {\n  @if $end == false {\n    $end: length($list);\n  }\n  $full: nth($list, $start);\n  @for $i from $start + 1 through $end {\n    $full: $full, nth($list, $i);\n  }\n  @return $full;\n}\n\n@function reject($list, $reject1, $reject2:null, $reject3:null, $reject4:null, $reject5:null, $reject6:null, $reject7:null, $reject8:null, $reject9:null) {\n  $rejects: $reject1, $reject2, $reject3, $reject4, $reject5, $reject6, $reject7, $reject8, $reject9;\n\n  $full: false;\n  @each $item in $list {\n    @if index($rejects, $item) {}\n    @else {\n      @if $full {\n        $full: $full, $item;\n      }\n      @else {\n        $full: $item;\n      }\n    }\n  }\n  @return $full;\n}\n","/*\n * A partial implementation of the Ruby constants functions from Compass:\n * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/constants.rb\n */\n\n@function opposite-position($from) {\n    @if ($from == top) {\n        @return bottom;\n    } @else if ($from == bottom) {\n        @return top;\n    } @else if ($from == left) {\n        @return right;\n    } @else if ($from == right) {\n        @return left;\n    } @else if ($from == center) {\n        @return center;\n    }\n}\n","/*\n * A partial implementation of the Ruby display functions from Compass:\n * https://github.com/Compass/compass/blob/stable/core/lib/compass/core/sass_extensions/functions/display.rb\n */\n\n@function elements-of-type($type){\n    @if ($type == block){\n        @return address, article, aside, blockquote, center, dir, div, dd, details, dl, dt, fieldset, figcaption, figure, form, footer, frameset, h1, h2, h3, h4, h5, h6, hr, header, hgroup, isindex, main, menu, nav, noframes, noscript, ol, p, pre, section, summary, ul;\n    } @else if ($type == inline){\n        @return a, abbr, acronym, audio, b, basefont, bdo, big, br, canvas, cite, code, command, datalist, dfn, em, embed, font, i, img, input, keygen, kbd, label, mark, meter, output, progress, q, rp, rt, ruby, s, samp, select, small, span, strike, strong, sub, sup, textarea, time, tt, u, var, video, wbr;\n    } @else if ($type == inline-block){\n        @return img;\n    } @else if ($type == table){\n        @return table;\n    } @else if ($type == list-item){\n        @return li;\n    } @else if ($type == table-row-group){\n        @return tbody;\n    } @else if ($type == table-header-group){\n        @return thead;\n    } @else if ($type == table-footer-group){\n        @return tfoot;\n    } @else if ($type == table-row){\n        @return tr;\n    } @else if ($type == table-cell){\n        @return th, td;\n    } @else if ($type == html5-block){\n        @return article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary;\n    } @else if ($type == html5-inline){\n        @return audio, canvas, command, datalist, embed, keygen, mark, meter, output, progress, rp, rt, ruby, time, video, wbr;\n    } @else if ($type == html5){\n        @return article, aside, audio, canvas, command, datalist, details, embed, figcaption, figure, footer, header, hgroup, keygen, main, mark, menu, meter, nav, output, progress, rp, rt, ruby, section, summary, time, video, wbr;\n    } @else if ($type == text-input){\n        @return input, textarea;\n    }\n}\n","@import \"bourbon\";\n@import \"compass\";\n\n@import \"variables\";\n\nbody {\n  margin: 0;\n  padding: 0;\n  background-color: $white;\n}\n\nth {\n  text-align: left; /* LTR */\n  color: $black;\n  border-bottom: 1px solid $light-grey;\n}\n\ntr {\n  &.odd {\n    background-color: $lighter-grey;\n  }\n\n  &.even {\n    background-color: $white;\n  }\n}\n\ntd {\n  padding: ($vert-spacing-unit * 0.5) ($horz-spacing-unit * 0.5);\n}\n\n#menu {\n  visibility: hidden;\n}\n\n#main {\n  margin: ($vert-spacing-unit) ($horz-spacing-unit);\n}\n\n.l-header {\n  padding: ($vert-spacing-unit) ($horz-spacing-unit);\n}\n\n.l-main {\n  padding: ($vert-spacing-unit) ($horz-spacing-unit);\n}\n\n.l-footer {\n  border-top: 1px solid $light-grey;\n  padding: ($vert-spacing-unit) ($horz-spacing-unit);\n}\n","$black         : #222;\n$white         : #FFF;\n$red           : #DD0000;\n$orange        : #FF9900;\n$yellow        : #FFFF00;\n$blue          : #006699;\n\n$grey          : mix($white, $black, 40%);\n$light-grey    : mix($white, $black, 75%);\n$lighter-grey  : mix($white, $black, 90%);\n$lightest-grey : mix($white, $black, 95%);\n\n$navy          : #0A2D50;\n$navy-grey     : mix($navy, $lightest-grey, 30%);\n\n$sky           : #20A3B6;\n$light-sky     : lighten($sky, 10%);\n$dark-sky      : darken($sky, 6%);\n\n$lemon         : #F9EC38;\n$light-lemon   : mix($white, $lemon, 75%);\n","@import \"breakpoint\";\n@import \"singularitygs\";\n\n// Set consistent vertical and horizontal spacing units.\n$vert-spacing-unit: 1em;\n$horz-spacing-unit: 1em;\n\n// Set breakpoint values.\n$medium: 47em;\n$large: 63em;\n$xlarge: 85em;\n$xxlarge: 120em;\n\n@include add-grid(16);\n\n@include add-gutter($horz-spacing-unit);\n"],"sourceRoot":"/source/"}